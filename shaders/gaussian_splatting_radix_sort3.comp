#version 450

#include "gaussian_splatting_types.glsl"

#extension GL_EXT_debug_printf : enable


layout(local_size_x = 256) in;

#extension GL_EXT_scalar_block_layout : enable

layout(scalar, binding = 0) buffer InputBuffer {
    Gaussian2D gaussians[];
} inputBuffer;

layout(scalar, binding = 2) buffer OutputBuffer {
    Gaussian2D gaussians[];
} outputBuffer;

layout(scalar, binding = 3) buffer CountBuffer {
    uint counts[];
} countBuffer;

layout(scalar, binding = 4) buffer OffsetBuffer {
    uint offsets[];
} offsetBuffer;

layout(scalar, binding = 5) buffer InputBuffer2 {
    uint numberTotalGaussians;
} inputBuffer2;

layout(push_constant) uniform PushConstants {
    uint pass;
    uint numElements;
    uint numBins;

} pushConstants;

bool debug = true;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= inputBuffer2.numberTotalGaussians) return;

    // copy back to input buffer
    // this could be circumvented by somehow flipping the input and output buffers
    inputBuffer.gaussians[idx] = outputBuffer.gaussians[idx];


    if (debug) {
        debugPrintfEXT("Input Gaussian[%u]: x=%f, y=%f, z=%f, binMask=%u\n", idx, inputBuffer.gaussians[idx].position.x, inputBuffer.gaussians[idx].position.y, inputBuffer.gaussians[idx].z, inputBuffer.gaussians[idx].binMask);
    }

}