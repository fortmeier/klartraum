#version 450

struct Gaussian {
    vec3 position;
    vec4 rotation;
    vec3 scale;
    vec3 color;
    float alpha;
    float shR[15];
    float shG[15];
    float shB[15];
};

#extension GL_EXT_scalar_block_layout : enable

layout(scalar, set = 0, binding = 0) readonly buffer GaussiansSSBOIn {
   Gaussian gaussianIn[ ];
};

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout (set = 0, binding = 1, rgba8) uniform writeonly image2D outputImage;


layout(set = 1, binding = 0) uniform UniformBufferObject {
    mat4 model;
    mat4 view;
    mat4 proj;
} ubo;


#extension GL_EXT_debug_printf : enable

void main()
{
    uint index = gl_GlobalInvocationID.z;
    vec3 p = gaussianIn[index].position;
    vec3 c = gaussianIn[index].color;

    ivec2 out_pos = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);

    vec4 position = ubo.proj * ubo.view * ubo.model * vec4(p, 1.0);
    vec2 norm_pos = position.xy / position.w;
    ivec2 gaussian2d = ivec2((norm_pos.x+1.0)*256.0, (norm_pos.y+1.0)*256.0);

    if(gaussian2d == out_pos)
    {
        imageStore(outputImage, out_pos, vec4(c, 1.0));
    }
}