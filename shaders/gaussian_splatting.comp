#version 450

struct Gaussian {
    vec3 position;
    vec4 rotation;
    vec3 scale;
    vec3 color;
    float alpha;
    float shR[15];
    float shG[15];
    float shB[15];
};

#extension GL_EXT_scalar_block_layout : enable

layout(scalar, set = 0, binding = 0) readonly buffer GaussiansSSBOIn {
   Gaussian gaussianIn[ ];
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (set = 0, binding = 1, rgba8) uniform writeonly image2D outputImage;


layout(set = 1, binding = 0) uniform UniformBufferObject {
    mat4 model;
    mat4 view;
    mat4 proj;
} ubo;


#extension GL_EXT_debug_printf : enable

void main()
{
    //1.0 / 0.0;
    vec4 pixel = vec4(gl_GlobalInvocationID.x / 100.0, gl_GlobalInvocationID.y / 20.0, 0.0, 1.0);

    uint index = gl_GlobalInvocationID.x;
    vec3 p = gaussianIn[index].position;
    vec3 c = gaussianIn[index].color;
    pixel.z = ubo.model[0][0];
    debugPrintfEXT("Debug info: value = %f\n", pixel.x);
    debugPrintfEXT("Debug info: %i p = (%f, %f, %f), c = (%f, %f, %f)\n", gl_GlobalInvocationID.x, p.x, p.y, p.z, c.x, c.y, c.z);

    imageStore(outputImage, ivec2(gl_GlobalInvocationID.xy), pixel);

    //debugPrintfEXT("scjeebug info: value = %f\n", pixel.x);

}